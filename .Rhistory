blogdown::new_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
?blogdown:::insert_image_addin()
?insert_image_addin()
knitr::opts_chunk$set(collapse = TRUE)
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
library(blogdown)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
head(word, 10)
words <- read.delim("https://raw.githubusercontent.com/dwyl/english-words/master/words.txt")
length_words <- words %>%
mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
lirbrary(tidyverse)
library(tidyverse)
length_words <- words %>%
mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
head(word, 10)
library(tidyverse)
words <- read.delim("https://raw.githubusercontent.com/dwyl/english-words/master/words.txt")
length_words <- words %>%
mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
head(word, 10)
head(length_words, 10)
View(words)
words <- read.delim("https://raw.githubusercontent.com/dwyl/english-words/master/words.txt")
word <- words %>%
mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
head(word, 10)
opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
library(tidyverse)
words <- read.delim("https://raw.githubusercontent.com/dwyl/english-words/master/words.txt")
length_words <- words %>%
mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
head(length_words, 10)
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
word <- words %>%
# mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
word <- words %>%
# mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
word <- NULL
word <- words %>%
# mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
str(words)
?read.delim
words <- read.delim("https://raw.githubusercontent.com/dwyl/english-words/master/words.txt", stringsAsFactors = FALSE)
word <- words %>%
# mutate(X2 = tolower(X2)) %>%
filter(!grepl("[gkmqvwxz]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
head(word, 10)
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
library(tidyverse)
words <- read.delim("https://raw.githubusercontent.com/dwyl/english-words/master/words.txt",
stringsAsFactors = FALSE)
length_words <- words %>%
filter(!grepl("[gkmqvwxzGKMQVWXZ]", X2)) %>%
mutate(length = nchar(X2)) %>%
arrange(desc(length))
head(length_words, 10)
# devtools::install_github('thomasp85/gganimate')
# devtools::install_github("thomasp85/transformr")
library(tidyverse)
library(janitor)
library(lubridate)
library(gganimate)
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
# devtools::install_github('thomasp85/gganimate')
# devtools::install_github("thomasp85/transformr")
library(tidyverse)
library(janitor)
library(lubridate)
library(gganimate)
pointinfo <- data.frame(station = c("Dordrecht", "Hoek van Holland",
"Lobith",	"Nijmegen haven",
"Tiel Waal",	"Vlaardingen",	"Vuren"),
km = c(53,	2,	165,	141,	114,	21,	79),
river = c( "beneden merwede", "nieuwe waterweg",
"rijn",	"waal",	"waal",	"nieuwe maas",	"waal"))
df_waterlevels <- read.csv2("C:/Users/Administrator/Desktop/Projects/2018/waterlevels/wl.csv", stringsAsFactors = F) %>%
clean_names() %>%
mutate(dy = as.Date(waarnemingdatum, "%d-%m-%Y"),
weeknr = week(dy),
yr = year(dy),
## replace 999999999 with NA.
waterlevel = replace(numeriekewaarde, which(numeriekewaarde == 999999999), NA)) %>%
rename(station = meetpunt_identificatie) %>%
filter(!is.na(station)) %>%
select(waterlevel, station, yr, weeknr) %>%
group_by(yr, weeknr, station) %>%
summarise(waterlevel_weekmean = mean(waterlevel, na.rm = TRUE)) %>%
left_join(pointinfo, by = "station")
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels <- df_waterlevels %>%
filter(yr == 2017) %>%
group_by(station, weeknr) %>%
summarise(waterlevel_wk2017mean = mean(waterlevel_weekmean, na.rm = TRUE)) %>%
right_join(df_waterlevels, by = c("station", "weeknr")) %>%
mutate(waterlevel_diff = waterlevel_weekmean - waterlevel_wk2017mean) %>%
## filter missings in weekly difference
filter(!is.na(waterlevel_diff))
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels %>%
+   filter(yr == 2018, weeknr == 1) %>%
+   ggplot()+
+   geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels <- read.csv2("C:/Users/Administrator/Desktop/Projects/2018/waterlevels/wl.csv", stringsAsFactors = F) %>%
clean_names() %>%
mutate(dy = as.Date(waarnemingdatum, "%d-%m-%Y"),
weeknr = week(dy),
yr = year(dy),
## replace 999999999 with NA.
waterlevel = replace(numeriekewaarde, which(numeriekewaarde == 999999999), NA)) %>%
rename(station = meetpunt_identificatie) %>%
filter(!is.na(station)) %>%
select(waterlevel, station, yr, weeknr) %>%
group_by(yr, weeknr, station) %>%
summarise(waterlevel_weekmean = mean(waterlevel, na.rm = TRUE)) %>%
left_join(pointinfo, by = "station")
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels <- df_waterlevels %>%
filter(yr == 2017) %>%
group_by(station, weeknr) %>%
summarise(waterlevel_wk2017mean = mean(waterlevel_weekmean, na.rm = TRUE)) %>%
right_join(df_waterlevels, by = c("station", "weeknr")) %>%
mutate(waterlevel_diff = waterlevel_weekmean - waterlevel_wk2017mean) %>%
## filter missings in weekly difference
filter(!is.na(waterlevel_diff))
View(df_waterlevels)
a <- ggplot() +
geom_line(data = df_waterlevels_2018, aes(x = km, y = 0), col = "orangered") +
geom_line(data = df_waterlevels_2018, aes(x = km, y = waterlevel_diff), col = "cyan3", size = 2) +
geom_label(aes(x = 2, y = 140, label = "difference in weekly avarage waterlevel of 2018"),
size = 6, color = "white", fill = " cyan3", fontface = "bold", hjust = "left") +
geom_label(aes(x = 2, y = 120, label = "compared to the weekly avarage waterlevel of 2017"),
size = 6, color = "white", fill = " cyan3", fontface = "bold", hjust = "left") +
geom_label(aes(x = 2, y = 100, label = "weekly avarage waterlevel of 2017 (is zero)"),
size = 5, color = "white", fill = " orangered", fontface = "bold", hjust = "left") +
theme_minimal() +
scale_x_continuous(breaks = pointinfo$km,
minor_breaks = NULL,
labels = pointinfo$station) +
theme(axis.text.x = element_text(face = "bold", size = 14, angle = 340)) +
## gganimate options
labs(title = "weeknumber: {closest_state} - 2018",
x = "measurepoint",
y = "") +
transition_states(weeknr, transition_length = 4, state_length = 0.5) +
ease_aes("sine-in-out")
df_waterlevels <- df_waterlevels %>%
filter(yr == 2017) %>%
group_by(station, weeknr) %>%
summarise(waterlevel_wk2017mean = mean(waterlevel_weekmean, na.rm = TRUE)) %>%
right_join(df_waterlevels, by = c("station", "weeknr")) %>%
mutate(waterlevel_diff = waterlevel_weekmean - waterlevel_wk2017mean) %>%
## filter missings in weekly difference
filter(!is.na(waterlevel_diff))
df_waterlevels <- read.csv2("C:/Users/Administrator/Desktop/Projects/2018/waterlevels/wl.csv", stringsAsFactors = F) %>%
clean_names() %>%
mutate(dy = as.Date(waarnemingdatum, "%d-%m-%Y"),
weeknr = week(dy),
yr = year(dy),
## replace 999999999 with NA.
waterlevel = replace(numeriekewaarde, which(numeriekewaarde == 999999999), NA)) %>%
rename(station = meetpunt_identificatie) %>%
filter(!is.na(station)) %>%
select(waterlevel, station, yr, weeknr) %>%
group_by(yr, weeknr, station) %>%
summarise(waterlevel_weekmean = mean(waterlevel, na.rm = TRUE)) %>%
left_join(pointinfo, by = "station")
df_waterlevels %>%
filter(yr == 2018, weeknr == 1) %>%
ggplot()+
geom_line(aes(x = km, y = waterlevel_weekmean))
df_waterlevels <- df_waterlevels %>%
filter(yr == 2017) %>%
group_by(station, weeknr) %>%
summarise(waterlevel_wk2017mean = mean(waterlevel_weekmean, na.rm = TRUE)) %>%
right_join(df_waterlevels, by = c("station", "weeknr")) %>%
mutate(waterlevel_diff = waterlevel_weekmean - waterlevel_wk2017mean) %>%
## filter missings in weekly difference
filter(!is.na(waterlevel_diff))
df_waterlevels_2018 <- df_waterlevels %>%
filter(yr == 2018)
a <- ggplot() +
geom_line(data = df_waterlevels_2018, aes(x = km, y = 0), col = "orangered") +
geom_line(data = df_waterlevels_2018, aes(x = km, y = waterlevel_diff), col = "cyan3", size = 2) +
geom_label(aes(x = 2, y = 140, label = "difference in weekly avarage waterlevel of 2018"),
size = 6, color = "white", fill = " cyan3", fontface = "bold", hjust = "left") +
geom_label(aes(x = 2, y = 120, label = "compared to the weekly avarage waterlevel of 2017"),
size = 6, color = "white", fill = " cyan3", fontface = "bold", hjust = "left") +
geom_label(aes(x = 2, y = 100, label = "weekly avarage waterlevel of 2017 (is zero)"),
size = 5, color = "white", fill = " orangered", fontface = "bold", hjust = "left") +
theme_minimal() +
scale_x_continuous(breaks = pointinfo$km,
minor_breaks = NULL,
labels = pointinfo$station) +
theme(axis.text.x = element_text(face = "bold", size = 14, angle = 340)) +
## gganimate options
labs(title = "weeknumber: {closest_state} - 2018",
x = "measurepoint",
y = "") +
transition_states(weeknr, transition_length = 4, state_length = 0.5) +
ease_aes("sine-in-out")
## with the explicite animate call there are more animation options available
animate(a, nframes = 400, width = 800, height = 600)
# anim_save("waterlevels.gif")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
a <- ggplot() +
geom_line(data = df_waterlevels_2018, aes(x = km, y = 0), col = "orangered") +
geom_line(data = df_waterlevels_2018, aes(x = km, y = waterlevel_diff), col = "cyan3", size = 2) +
geom_label(aes(x = 2, y = 140, label = "difference in weekly avarage waterlevel of 2018"),
size = 6, color = "white", fill = " cyan3", fontface = "bold", hjust = "left") +
geom_label(aes(x = 2, y = 120, label = "compared to the weekly avarage waterlevel of 2017"),
size = 6, color = "white", fill = " cyan3", fontface = "bold", hjust = "left") +
geom_label(aes(x = 2, y = 100, label = "weekly avarage waterlevel of 2017 (is zero)"),
size = 5, color = "white", fill = " orangered", fontface = "bold", hjust = "left") +
theme_minimal() +
scale_x_continuous(breaks = pointinfo$km,
minor_breaks = NULL,
labels = pointinfo$station) +
theme(axis.text.x = element_text(face = "bold", size = 14, angle = 340)) +
## gganimate options
labs(title = "weeknumber: {closest_state} - 2018",
x = "measurepoint",
y = "") +
transition_states(weeknr, transition_length = 4, state_length = 0.5) +
ease_aes("sine-in-out")
## with the explicite animate call there are more animation options available
animate(a, nframes = 400, width = 800, height = 600)
# anim_save("waterlevels.gif")
blogdown:::insert_image_addin()
traceback()
blogdown:::insert_image_addin()
